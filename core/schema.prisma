// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider        = "prisma-client-js"
  output          = "node_modules/.prisma/client"
  previewFeatures = ["filterJson"]
}

model User {
  id                   String       @id @default(cuid())
  login                String       @unique @default("")
  password             String
  access               Access[]     @relation("User_access")
  worksIn              Department[] @relation("Department_workers")
  manages              Department[] @relation("Department_managers")
  headOf               Department[] @relation("Department_heads")
  from_ShiftRule_users ShiftRule[]  @relation("ShiftRule_users")
}

model Access {
  id               String         @id @default(cuid())
  name             String         @unique @default("")
  isContainedIn    Access[]       @relation("Access_contains")
  contains         Access[]       @relation("Access_contains")
  type             AccessTypeType @default(System)
  from_User_access User[]         @relation("User_access")
}

model Department {
  id                         String       @id @default(cuid())
  name                       String       @unique @default("")
  heads                      User?        @relation("Department_heads", fields: [headsId], references: [id])
  headsId                    String?      @map("heads")
  managers                   User[]       @relation("Department_managers")
  workers                    User[]       @relation("Department_workers")
  isControlledBy             Department?  @relation("Department_isControlledBy", fields: [isControlledById], references: [id])
  isControlledById           String?      @map("isControlledBy")
  controls                   Department[] @relation("Department_isControlledBy")
  from_ShiftRule_departments ShiftRule[]  @relation("ShiftRule_departments")

  @@index([headsId])
  @@index([isControlledById])
}

model Setting {
  id          String @id @default(cuid())
  projectID   String @default("horns_n_hooves")
  projectName String @default("Horns&Hooves")
}

model History {
  id            String    @id @default(cuid())
  list          String    @default("")
  ref           String    @default("")
  at            DateTime?
  by            String    @default("")
  operation     String    @default("")
  updatedFields Json?
}

model ShiftRule {
  id          String       @id @default(cuid())
  name        String       @unique @default("")
  users       User[]       @relation("ShiftRule_users")
  departments Department[] @relation("ShiftRule_departments")
  active      Boolean      @default(false)
}

enum AccessTypeType {
  System
  Role
}